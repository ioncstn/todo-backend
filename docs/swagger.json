{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/hello": {
            "get": {
                "description": "This endpoint returns a simple \"hello world\" message",
                "produces": [
                    "application/json"
                ],
                "summary": "Hello endpoint",
                "operationId": "hello",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/todos": {
            "get": {
                "description": "This endpoint returns all todo items, with pagination",
                "produces": [
                    "application/json"
                ],
                "summary": "Get all todo items",
                "operationId": "getAll",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order of items in relation to Done",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/todos.PaginatedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "description": "This endpoint creates a new todo item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new todo item",
                "operationId": "create",
                "parameters": [
                    {
                        "description": "ToDo item to create",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/todos.ToDoItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/todos.ToDoItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ResponseError"
                        }
                    }
                }
            }
        },
        "/todos/{id}": {
            "put": {
                "description": "This endpoint updates a todo item by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a todo item by ID",
                "operationId": "updateById",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ToDo Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ToDo item update data",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/todos.ToDoItemUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/todos.ToDoItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "description": "This endpoint deletes a todo item by its ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a todo item by ID",
                "operationId": "deleteById",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ToDo Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.ResponseError": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "todos.PaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/todos.ToDoItem"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/todos.PaginationMetadata"
                }
            }
        },
        "todos.PaginationMetadata": {
            "type": "object",
            "properties": {
                "resultCount": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "todos.ToDoItem": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "done": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "todos.ToDoItemUpdateInput": {
            "type": "object",
            "properties": {
                "done": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string"
                }
            }
        }
    }
}